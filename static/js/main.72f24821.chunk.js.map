{"version":3,"sources":["pesukim-data.csv","parsha-list.txt","components/guessForm.js","components/header.js","components/pasukDisplay.js","components/prevGuessLIst.js","parse.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","GuessForm","props","handleBorderColor","input","guessCounter","correctGuess","React","createElement","onSubmit","handleAnswerSubmit","style","display","flexWrap","justifyContent","alignItems","padding","id","value","parshaList","map","parsha","key","name","list","answerData","sefer","width","borderColor","onChange","event","setAnswerData","_objectSpread","target","placeholder","autoComplete","required","type","min","max","perek","passukNumber","margin","textAlign","disabled","passukText","Header","PasukDisplay","onClick","onPassukClick","Box","border","sx","height","PrevGuessList","passuk","prevGuess","forEach","guess","push","handleHints","Number","flexDirection","length","Math","random","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","PassukGuesser","_useState","useState","_useState2","_slicedToArray","pesukimData","setPesukimData","_useState3","_useState4","setParshaList","_useState5","_useState6","setPassukText","_useState7","_useState8","setPassuk","_useState9","_useState10","setShowAnswer","_useState11","_useState12","_useState13","_useState14","setPreviousGuess","_useState15","_useState16","setCorrectGuess","_useState17","_useState18","setGuessCounter","useEffect","fetchPesukimData","_ref","_asyncToGenerator","_callee","_context","Papa","parse","PesukimData","download","delimiter","data","apply","arguments","fetchParshaList","_ref2","_callee2","_context2","fetch","ParshaList","r","text","split","_ref3","_callee3","clonedAnwers","_context3","preventDefault","concat","_toConsumableArray","JSON","stringify","prevState","_x","floor","randomPassuk","App","backgroundColor","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.72f24821.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pesukim-data.d40400c3.csv\";","module.exports = __webpack_public_path__ + \"static/media/parsha-list.042ae457.txt\";","import React from \"react\";\n\nexport const GuessForm = (props) => {\n  const handleBorderColor = (input) => {\n    if (props.guessCounter !== 0) {\n      if (props.correctGuess[input] === true || props.correctGuess === true) {\n        return \"lightgreen\";\n      } else {\n        return \"red\";\n      }\n    } else return \"grey\";\n  };\n\n  return (\n    <form onSubmit={props.handleAnswerSubmit}>\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: 10,\n        }}\n      >\n        <datalist id=\"seferList\">\n          <option value=\"בראשית\">בראשית</option>\n          <option value=\"שמות\">שמות</option>\n          <option value=\"ויקרא\">ויקרא</option>\n          <option value=\"במדבר\">במדבר</option>\n          <option value=\"דברים\">דברים</option>\n        </datalist>\n        <datalist id=\"parshaList\">\n          {props.parshaList.map((parsha) => (\n            <option key={parsha} value={parsha}>\n              {parsha}\n            </option>\n          ))}\n        </datalist>\n        <input\n          id=\"sefer\"\n          name=\"sefer\"\n          list=\"seferList\"\n          value={props.answerData.sefer}\n          style={{ width: 150, borderColor: handleBorderColor(\"sefer\") }}\n          onChange={(event) =>\n            props.setAnswerData({ ...props.answerData, sefer: event.target.value })\n          }\n          placeholder=\"Sefer\"\n          autoComplete=\"off\"\n          required\n        />\n        <br></br>\n        <input\n          id=\"parsha\"\n          name=\"parsha\"\n          list=\"parshaList\"\n          value={props.answerData.parsha}\n          style={{ width: 150, borderColor: handleBorderColor(\"parsha\") }}\n          onChange={(event) =>\n            props.setAnswerData({ ...props.answerData, parsha: event.target.value })\n          }\n          placeholder=\"Parsha\"\n          autoComplete=\"off\"\n          required\n        />\n        <br></br>\n        <input\n          type=\"number\"\n          id=\"perek\"\n          name=\"perek\"\n          min='1'\n          max='50'\n          value={props.answerData.perek}\n          style={{ width: 150, borderColor: handleBorderColor(\"perek\") }}\n          onChange={(event) =>\n            props.setAnswerData({ ...props.answerData, perek: event.target.value })\n          }\n          placeholder=\"Perek\"\n          autoComplete=\"off\"\n          required\n        />\n        <br></br>\n        <input\n          type=\"number\"\n          id=\"passukNumber\"\n          name=\"passukNumber\"\n          value={props.answerData.passukNumber}\n          style={{ width: 150, borderColor: handleBorderColor(\"passukNumber\") }}\n          onChange={(event) =>\n            props.setAnswerData({ ...props.answerData, passukNumber: event.target.value })\n          }\n          placeholder=\"Passuk\"\n          autoComplete=\"off\"\n          required\n        />\n        <br></br>\n      </div>\n      <div style={{ margin: 20, textAlign: \"center\" }}>\n        <input\n          type=\"submit\"\n          value=\"Guess!\"\n          disabled={props.passukText === \"\" || props.guessCounter > 4 ? true : false}\n        />\n      </div>\n    </form>\n  );\n};\n","import React from 'react'\n\nexport const Header = () => {\n    return (\n        <div style={{textAlign:'center'}}>\n            <h1>Passukle</h1>\n            <h4>\"Putting the Torah into Bitul Torah\"</h4>\n        </div>\n    )\n}","import React from \"react\";\nimport { Box } from \"@mui/material\";\n\nexport const PasukDisplay = (props) => {\n  return (\n    <div\n      style={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: 20,\n        textAlign: \"center\",\n      }}\n    >\n      <button onClick={props.onPassukClick}>Generate Random Passuk</button>\n      <Box border={1} sx={{height:60}}>\n        <p>{props.passukText}</p>\n      </Box>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\n\nexport const PrevGuessList = (props) => {\n  let sefer = [];\n  let parsha = [];\n  let perek = [];\n  let passuk = [];\n  props.prevGuess.forEach((guess) => {\n    sefer.push(guess.sefer);\n    parsha.push(guess.parsha);\n    perek.push(guess.perek);\n    passuk.push(guess.passuk);\n  });\n\n  const handleHints = (guess, type) => {\n    if (Number(props.passuk[type]) > Number(guess)) {\n      return \"(higher)\";\n    } else if (Number(props.passuk[type]) < Number(guess)) {\n      return \"(lower)\";\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div>\n      <Box border={1} sx={{ height: 400 }}>\n        <h3 style={{ textAlign: \"center\" }}>\n          <u>Previous Guesses</u>\n        </h3>\n        <div\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            display: \"flex\",\n          }}\n        >\n          <h4>Sefer</h4>\n          <h4>Parsha</h4>\n          <h4>Perek</h4>\n          <h4>Passuk</h4>\n        </div>\n        {props.prevGuess.length !== 0\n          ? props.prevGuess.map((guess) => (\n              <div\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-around\",\n                  display: \"flex\",\n                }}\n                key={Math.random()}\n              >\n                <p>{guess.sefer}</p>\n                <p>{guess.parsha}</p>\n                <p>\n                  {guess.perek}\n                  {handleHints(guess.perek, \"perek\")}\n                </p>\n                <p>\n                  {guess.passukNumber}\n                  {handleHints(guess.passukNumber, \"passukNumber\")}\n                </p>\n              </div>\n            ))\n          : null}\n      </Box>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport PesukimData from \"./pesukim-data.csv\";\nimport { GuessForm } from \"./components/guessForm\";\nimport { Header } from \"./components/header\";\nimport { PasukDisplay } from \"./components/pasukDisplay\";\nimport ParshaList from \"./parsha-list.txt\";\nimport { PrevGuessList } from \"./components/prevGuessLIst\";\n\nexport const PassukGuesser = () => {\n  const [pesukimData, setPesukimData] = useState([]);\n  const [parshaList, setParshaList] = useState([]);\n  const [passukText, setPassukText] = useState(\"\");\n  const [passuk, setPassuk] = useState(\"\");\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [answerData, setAnswerData] = useState({\n    sefer: \"\",\n    parsha: \"\",\n    perek: \"\",\n    passukNumber: \"\",\n  });\n  const [prevGuess, setPreviousGuess] = useState([]);\n  const [correctGuess, setCorrectGuess] = useState({\n    sefer: false,\n    parsha: false,\n    perek: false,\n    passukNumber: false,\n  });\n  const [guessCounter, setGuessCounter] = useState(0);\n\n  useEffect(() => {\n    const fetchPesukimData = async () => {\n      Papa.parse(PesukimData, {\n        download: true,\n        delimiter: \",\",\n        complete: (result) => {\n          setPesukimData(result.data);\n        },\n      });\n    };\n    const fetchParshaList = async () => {\n      fetch(ParshaList)\n        .then((r) => r.text())\n        .then((text) => setParshaList(text.split(/\\r?\\n/)));\n    };\n    fetchPesukimData();\n    fetchParshaList();\n  }, []);\n\n  const onPassukClick = () => {\n    setShowAnswer(false);\n    setAnswerData({\n      sefer: \"\",\n      parsha: \"\",\n      perek: \"\",\n      passukNumber: \"\",\n    });\n    setCorrectGuess({\n      sefer: false,\n      parsha: false,\n      perek: false,\n      passukNumber: false,\n    });\n    setGuessCounter(0);\n    const passukNumber = Math.floor(Math.random() * 5840);\n    const randomPassuk = pesukimData[passukNumber];\n    setPassukText(randomPassuk[0]);\n    setPassuk({\n      sefer: randomPassuk[1],\n      parsha: randomPassuk[2],\n      perek: randomPassuk[3],\n      passukNumber: randomPassuk[4],\n    });\n    setPreviousGuess([]);\n  };\n\n  const handlePrevGuess = (guess) => {\n    if (correctGuess !== true) {\n      setPreviousGuess([...prevGuess, guess]);\n    } else {\n      setPreviousGuess([]);\n    }\n  };\n\n  const answer = () => {\n    if (showAnswer === true) {\n      return (\n        <div>\n          <ul>\n            <li>Sefer: {passuk.sefer}</li>\n            <li>Parsha: {passuk.parsha}</li>\n            <li>Perek: {passuk.perek}</li>\n            <li>Passuk: {passuk.passukNumber}</li>\n          </ul>\n        </div>\n      );\n    }\n  };\n\n  const handleAnswerSubmit = async (event) => {\n    event.preventDefault();\n    setGuessCounter(guessCounter + 1);\n    handlePrevGuess(answerData);\n    const clonedAnwers = answerData;\n    if (JSON.stringify(answerData) === JSON.stringify(passuk)) {\n      setCorrectGuess(true);\n      return;\n    } else {\n      if (clonedAnwers.sefer === passuk.sefer) {\n        setCorrectGuess((prevState) => ({ ...prevState, sefer: true }));\n      } else {\n        setAnswerData((prevState) => ({ ...prevState, sefer: \"\" }));\n      }\n      if (clonedAnwers.parsha === passuk.parsha) {\n        setCorrectGuess((prevState) => ({ ...prevState, parsha: true }));\n      } else {\n        setAnswerData((prevState) => ({ ...prevState, parsha: \"\" }));\n      }\n      if (clonedAnwers.perek === passuk.perek) {\n        setCorrectGuess((prevState) => ({ ...prevState, perek: true }));\n      } else {\n        setAnswerData((prevState) => ({ ...prevState, perek: \"\" }));\n      }\n      if (clonedAnwers.passukNumber === passuk.passukNumber) {\n        setCorrectGuess((prevState) => ({ ...prevState, passukNumber: true }));\n      } else {\n        setAnswerData((prevState) => ({ ...prevState, passukNumber: \"\" }));\n      }\n    }\n  };\n\n  return (\n    <div style={{ margin: 20 }}>\n      <Header />\n      <PasukDisplay onPassukClick={onPassukClick} passukText={passukText} />\n      <div style={{ margin: 20 }}>\n        <GuessForm\n          answerData={answerData}\n          handleAnswerSubmit={handleAnswerSubmit}\n          setAnswerData={setAnswerData}\n          parshaList={parshaList}\n          passukText={passukText}\n          correctGuess={correctGuess}\n          guessCounter={guessCounter}\n        />\n      </div>\n      {/* <button onClick={() => setShowAnswer(true)}>Show Answer</button> */}\n      {/* {answer()} */}\n      <PrevGuessList prevGuess={prevGuess} correctGuess={correctGuess} passuk={passuk} />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { PassukGuesser } from \"./parse\";\n// Allowed extensions for input file\n\nconst App = () => {\n\treturn (\n\t\t<div style={{backgroundColor: \"lightblue\", height:'100vh'}}>\n\t\t\t<PassukGuesser/>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}